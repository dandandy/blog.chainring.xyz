<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Chainring</title>
    <link>https://blog.chainring.xyz/posts/</link>
    <description>Recent content in Posts on Chainring</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 27 Jan 2022 17:36:30 +1100</lastBuildDate><atom:link href="https://blog.chainring.xyz/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using the fp-ts IO &amp; Task monads together</title>
      <link>https://blog.chainring.xyz/posts/tp-io-promise-monad/</link>
      <pubDate>Thu, 27 Jan 2022 17:36:30 +1100</pubDate>
      
      <guid>https://blog.chainring.xyz/posts/tp-io-promise-monad/</guid>
      <description>tldr: convert IO monads to Task monads
 Over the short while I&amp;rsquo;ve been using the fp-ts library I have found it a challenge to use different monads together. One case I recently came across was using the IO and Task monads together, however I came up with a simple solution: convert IO monads to Task monads, then proceed as usual with Task Monads. In this blog post I want to show how to convert an IO monad to a Task monad and why it is ok to do this.</description>
    </item>
    
    <item>
      <title>fp-ts Simple Import Convention</title>
      <link>https://blog.chainring.xyz/posts/tp-ts-imports/</link>
      <pubDate>Tue, 25 Jan 2022 21:49:58 +1100</pubDate>
      
      <guid>https://blog.chainring.xyz/posts/tp-ts-imports/</guid>
      <description>When using the fp-ts library we can end up with files containing many imports of different functors, applicative or monads. Managing fp-ts library imports can be a challenge because Typescript offers us many different ways to import libraries. There are other blog articles that already break down the different ways we can import libraries, but due to the nature of fp-ts I suggest this simple import convention which will make your code more understandable and concise than just doing what your IDE suggests.</description>
    </item>
    
    <item>
      <title>The Lean Startup Definitions</title>
      <link>https://blog.chainring.xyz/posts/lean_startup_definitions/</link>
      <pubDate>Wed, 20 Jan 2021 09:32:29 +1100</pubDate>
      
      <guid>https://blog.chainring.xyz/posts/lean_startup_definitions/</guid>
      <description>The Lean Startup by Eric Ries covers how most new businesses fail and how to prevent such failures. Encompassing many case studies, techniques and ideas, the book is a useful tool in creating innovation in any institution large or small.
However, if you&amp;rsquo;re like me after reading The Lean Startup you find your mind drowning in a sea of jargon, concepts and case studies. So I decided to try and condense the book into a series of definitions to condense the book into its key elements.</description>
    </item>
    
    <item>
      <title>Save your thumbs with Strava Kudos Automation</title>
      <link>https://blog.chainring.xyz/posts/strava_kudos_automation/</link>
      <pubDate>Mon, 09 Nov 2020 21:14:20 +1100</pubDate>
      
      <guid>https://blog.chainring.xyz/posts/strava_kudos_automation/</guid>
      <description>As a software developer, I am always looking for ways to automate mundane tasks in my life. As a casual athlete I am always looking for ways to show my support to my friends on Strava by kudos&amp;rsquo;ing (ie. liking) their activities. So one day I thought why not automate my kudos&amp;rsquo;ing activities on Strava. This blog post explains the method and code I used to create this kudos&amp;rsquo;ing automation.</description>
    </item>
    
    <item>
      <title>Internet Performance Monitoring and Visualisation</title>
      <link>https://blog.chainring.xyz/posts/internet_performance_monitoring/</link>
      <pubDate>Wed, 14 Oct 2020 18:32:02 +1100</pubDate>
      
      <guid>https://blog.chainring.xyz/posts/internet_performance_monitoring/</guid>
      <description>Internet is a slippery service to track due to the fluctuating and intangible nature of internet access. Some may take their Internet Service Provider&amp;rsquo;s (ISP) word that they are delivering internet performance that is up to the standard you are paying for, but not me. I can only shut my eyes at night with the confidence that my download and upload speeds, as well as latency, are up to scratch.</description>
    </item>
    
    <item>
      <title>Simple Tips for Happy Bashing</title>
      <link>https://blog.chainring.xyz/posts/bash_tips/</link>
      <pubDate>Sat, 03 Oct 2020 23:31:23 +1000</pubDate>
      
      <guid>https://blog.chainring.xyz/posts/bash_tips/</guid>
      <description>Bash (Bourne Again Shell) is an incredibly common shell and scripting language in which any developer working on Linux and macOS based systems will inevitably come across. Because of this, Bash scripting skills are a formidible tool to have in your belt. However, Bash scripting is notoriously difficult due to its extensive nature and large feature set, which often leads to developers writing poor scripts.
In this post, we will how explore you can write better Bash scripts with the help of The Set Builtin, Trapping Functions, Shellcheck, and Idempotency.</description>
    </item>
    
  </channel>
</rss>
